swagger: '2.0'
info:
  version: '1.0.0'
  title: devpspace_app API
  description: A sample API documentation created to demonstrate the currently available RESTful services.
    Open the url meioned below the email address and paste this complete set of code or click file > import file.
    Browse and open this YAML file.
  #termsOfService: http://helloreverb.com/terms/
  contact:
    name: hSenid Lanka team
    #email: foo@example.com
    url: http://editor.swagger.io/
  #license:
    #name: MIT
    #url: http://opensource.org/licenses/MIT
host: localhost:2222
basePath: /devspace/api/v1.0
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/add/{username}/{password}:
    post:
      description: Add a new user to the database
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of the new user
          required: true
          type: string
          
        - name: password
          in: path
          description: Password of the new user
          required: true
          type: string
      responses:
        '201':
          description: New user added/created
          schema:
            type: array
            items:
              $ref: '#/definitions/success-message'
              
        '404':
          description: Resource not found
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'
              
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'    
            
  /users/delete/{username}:
    delete:
      description: Delete a user from the database
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of the user
          required: true
          type: string
      responses:
        '200':
          description: User delete success
          schema:
            type: array
            items:
              $ref: '#/definitions/success-message'
              
        '404':
          description: Resource not found
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'
        
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'
            
  /users/login/{username}/{password}:
    post:
      description: Authorize a user by username and password
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of the new user
          required: true
          type: string
          
        - name: password
          in: path
          description: Password of the new user
          required: true
          type: string
      responses:
        '200':
          description: User authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/success-message'
              
        '404':
          description: Resource not found
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'
              
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'  
              
        '401':
          description: Unauthorized user
          schema:
            type: array
            items:
              $ref: '#/definitions/error-message'     
            
definitions:
  error-message:
    type: object
    required:
      - status
      - error-code
      - error-message
      - description
    properties:
      status:
        type: string
      error-code:
        type: integer
        format: int32
      error-message:
        type: string
      description:
        type: string
   
  success-message:
    type: object
    required:
      - status
      - code
      - message
      - data
    properties:
      status:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      data:
        type: object
        
        