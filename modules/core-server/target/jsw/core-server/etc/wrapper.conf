#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=java
wrapper.working.dir=..

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=com.hsenid.devspace.ServerMain
set.default.REPO_DIR=lib
set.APP_BASE=.

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=lib/wrapper.jar
wrapper.java.classpath.2=etc
wrapper.java.classpath.3=%REPO_DIR%/core-server-0.0.1-SNAPSHOT.jar
wrapper.java.classpath.4=%REPO_DIR%/wrapper-3.2.3.jar
wrapper.java.classpath.5=%REPO_DIR%/log4j-api-2.6.1.jar
wrapper.java.classpath.6=%REPO_DIR%/log4j-core-2.6.1.jar
wrapper.java.classpath.7=%REPO_DIR%/c3p0-0.9.1.2.jar
wrapper.java.classpath.8=%REPO_DIR%/jetty-server-9.3.10.v20160621.jar
wrapper.java.classpath.9=%REPO_DIR%/javax.servlet-api-3.1.0.jar
wrapper.java.classpath.10=%REPO_DIR%/jetty-http-9.3.10.v20160621.jar
wrapper.java.classpath.11=%REPO_DIR%/jetty-util-9.3.10.v20160621.jar
wrapper.java.classpath.12=%REPO_DIR%/jetty-io-9.3.10.v20160621.jar
wrapper.java.classpath.13=%REPO_DIR%/jetty-webapp-9.3.10.v20160621.jar
wrapper.java.classpath.14=%REPO_DIR%/jetty-xml-9.3.10.v20160621.jar
wrapper.java.classpath.15=%REPO_DIR%/jetty-servlet-9.3.10.v20160621.jar
wrapper.java.classpath.16=%REPO_DIR%/jetty-security-9.3.10.v20160621.jar
wrapper.java.classpath.17=%REPO_DIR%/jersey-server-1.19.jar
wrapper.java.classpath.18=%REPO_DIR%/jersey-core-1.19.jar
wrapper.java.classpath.19=%REPO_DIR%/jsr311-api-1.1.1.jar
wrapper.java.classpath.20=%REPO_DIR%/jersey-server-2.23.jar
wrapper.java.classpath.21=%REPO_DIR%/jersey-common-2.23.jar
wrapper.java.classpath.22=%REPO_DIR%/jersey-guava-2.23.jar
wrapper.java.classpath.23=%REPO_DIR%/osgi-resource-locator-1.0.1.jar
wrapper.java.classpath.24=%REPO_DIR%/jersey-client-2.23.jar
wrapper.java.classpath.25=%REPO_DIR%/javax.ws.rs-api-2.0.1.jar
wrapper.java.classpath.26=%REPO_DIR%/jersey-media-jaxb-2.23.jar
wrapper.java.classpath.27=%REPO_DIR%/javax.annotation-api-1.2.jar
wrapper.java.classpath.28=%REPO_DIR%/hk2-api-2.4.0-b34.jar
wrapper.java.classpath.29=%REPO_DIR%/hk2-utils-2.4.0-b34.jar
wrapper.java.classpath.30=%REPO_DIR%/aopalliance-repackaged-2.4.0-b34.jar
wrapper.java.classpath.31=%REPO_DIR%/javax.inject-2.4.0-b34.jar
wrapper.java.classpath.32=%REPO_DIR%/hk2-locator-2.4.0-b34.jar
wrapper.java.classpath.33=%REPO_DIR%/javassist-3.18.1-GA.jar
wrapper.java.classpath.34=%REPO_DIR%/validation-api-1.1.0.Final.jar
wrapper.java.classpath.35=%REPO_DIR%/jersey-servlet-1.19.jar
wrapper.java.classpath.36=%REPO_DIR%/spring-context-4.2.6.RELEASE.jar
wrapper.java.classpath.37=%REPO_DIR%/spring-aop-4.2.6.RELEASE.jar
wrapper.java.classpath.38=%REPO_DIR%/aopalliance-1.0.jar
wrapper.java.classpath.39=%REPO_DIR%/spring-beans-4.2.6.RELEASE.jar
wrapper.java.classpath.40=%REPO_DIR%/spring-core-4.2.6.RELEASE.jar
wrapper.java.classpath.41=%REPO_DIR%/commons-logging-1.2.jar
wrapper.java.classpath.42=%REPO_DIR%/spring-expression-4.2.6.RELEASE.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=lib

# Java Additional Parameters
#wrapper.java.additional.1=

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3
wrapper.java.initmemory=256

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=64
wrapper.java.maxmemory=1024

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.hsenid.devspace.ServerMain
wrapper.app.parameter.2=start

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=LPZM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=core-server

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=core-server

# Display name of the service
wrapper.ntservice.displayname=core-server

# Description of the service
wrapper.ntservice.description=core-server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

configuration.directory.in.classpath.first=etc
wrapper.startup.timeout=0
