<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--<import resource="admin-security.xml"/>-->
    <import resource="session-factory-config.xml"/>
    <!--<import resource="admin-service.xml"/>-->

    <!--It pulls values from a properties file into bean definitions.-->
    <bean id="connectionProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:connectivity.properties"/>
    </bean>

    <bean id="userRepository" class="hsl.devspace.app.corelogic.repository.user.UserRepositoryImpl">
        <property name="dataSource" ref="productionDataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!--<import resource="admin-service.xml"/>-->
    <!--when an excepton listed under exceptionMapping property list is thrown from the application,
   it'll render the pre-determined view WEB-INF/views/500.jsp-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">500</prop>
            </props>
        </property>
        <!--other exeptions thrown are rendered to this view-->
        <property name="defaultErrorView" value="defaultError"/>
    </bean>


    <!--The tile definition xml is specified when you define the TilesConfigurer bean
    Tiles specified in the definition xml can be used as views in the Web Application -->
<!--
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles-defs.xml</value>
            </list>
        </property>
    </bean>
-->





</beans>
