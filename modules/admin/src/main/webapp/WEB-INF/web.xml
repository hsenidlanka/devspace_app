<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>Archetype Created Web Application</display-name>

    <!--
        - Location of the XML file that defines the root application context is initiated by
        - ContextLoaderListener.
        -->

  <!--  <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/admin-integration-context.xml</param-value>
    </context-param>-->


    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>hsl.devspace.app.admin.spring.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>


    <!--Spring Security web infrastructure is based on servlet filters which has to be declared in web.xml in order
    for them to be recognised by servlet container.
    Following provides a link between web.xml and application context
    The filter name "springSecurityFilterChain" represents an bean of type FilterChainProxy which holds list of filters.-->

 <!--   <filter>
          <filter-name>springSecurityFilterChain</filter-name>
          <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
            <filter-name>springSecurityFilterChain</filter-name>
            <url-pattern>/*</url-pattern>
    </filter-mapping>-->


    <!--Single sign in, sign out filters-->
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>


    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>




    <!--Spring MVC dispatcher servlet mapping-->
    <servlet>
        <servlet-name>admin</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>admin</servlet-name>
        <!--<url-pattern>/admin/*</url-pattern>-->
        <url-pattern>/</url-pattern>

    </servlet-mapping>

    <!--<servlet-mapping>-->
    <!--<servlet-name>admin</servlet-name>-->
    <!--<url-pattern>*.js</url-pattern>-->
    <!--</servlet-mapping>-->


    <!--  Enable the following and spring-security.xml configurations for Concurrent Access Restriction-->
    <!--<listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>-->


    <listener>
        <listener-class>hsl.devspace.app.admin.listener.ApplicationStatusEventListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>

</web-app>